|vga2
o_vid_display <= VGA_drvr:inst.o_vid_display
MAX10_CLK1_50 => pll_25MHz:inst1.inclk0
SW[0] => VGA_drvr:inst.i_rstb
SW[1] => quadro:inst2.moveHor[0]
SW[2] => quadro:inst2.moveHor[1]
SW[3] => quadro:inst2.moveHor[2]
SW[4] => quadro:inst2.moveHor[3]
SW[5] => quadro:inst2.moveVer[0]
SW[6] => quadro:inst2.moveVer[1]
SW[7] => quadro:inst2.moveVer[2]
SW[8] => quadro:inst2.moveVer[3]
VGA_VS <= VGA_drvr:inst.o_v_sync
VGA_HS <= VGA_drvr:inst.o_h_sync
VGA_B[0] <= VGA_drvr:inst.o_blue_out[0]
VGA_B[1] <= VGA_drvr:inst.o_blue_out[1]
VGA_B[2] <= VGA_drvr:inst.o_blue_out[2]
VGA_B[3] <= VGA_drvr:inst.o_blue_out[3]
VGA_G[0] <= VGA_drvr:inst.o_green_out[0]
VGA_G[1] <= VGA_drvr:inst.o_green_out[1]
VGA_G[2] <= VGA_drvr:inst.o_green_out[2]
VGA_G[3] <= VGA_drvr:inst.o_green_out[3]
VGA_R[0] <= VGA_drvr:inst.o_red_out[0]
VGA_R[1] <= VGA_drvr:inst.o_red_out[1]
VGA_R[2] <= VGA_drvr:inst.o_red_out[2]
VGA_R[3] <= VGA_drvr:inst.o_red_out[3]


|vga2|VGA_drvr:inst
i_vid_clk => blue[0].CLK
i_vid_clk => blue[1].CLK
i_vid_clk => blue[2].CLK
i_vid_clk => blue[3].CLK
i_vid_clk => green[0].CLK
i_vid_clk => green[1].CLK
i_vid_clk => green[2].CLK
i_vid_clk => green[3].CLK
i_vid_clk => red[0].CLK
i_vid_clk => red[1].CLK
i_vid_clk => red[2].CLK
i_vid_clk => red[3].CLK
i_vid_clk => h_count[0].CLK
i_vid_clk => h_count[1].CLK
i_vid_clk => h_count[2].CLK
i_vid_clk => h_count[3].CLK
i_vid_clk => h_count[4].CLK
i_vid_clk => h_count[5].CLK
i_vid_clk => h_count[6].CLK
i_vid_clk => h_count[7].CLK
i_vid_clk => h_count[8].CLK
i_vid_clk => h_count[9].CLK
i_vid_clk => v_count[0].CLK
i_vid_clk => v_count[1].CLK
i_vid_clk => v_count[2].CLK
i_vid_clk => v_count[3].CLK
i_vid_clk => v_count[4].CLK
i_vid_clk => v_count[5].CLK
i_vid_clk => v_count[6].CLK
i_vid_clk => v_count[7].CLK
i_vid_clk => v_count[8].CLK
i_vid_clk => v_count[9].CLK
i_rstb => blue[0].ACLR
i_rstb => blue[1].ACLR
i_rstb => blue[2].ACLR
i_rstb => blue[3].ACLR
i_rstb => green[0].ACLR
i_rstb => green[1].ACLR
i_rstb => green[2].ACLR
i_rstb => green[3].ACLR
i_rstb => red[0].ACLR
i_rstb => red[1].ACLR
i_rstb => red[2].ACLR
i_rstb => red[3].ACLR
i_rstb => h_count[0].ACLR
i_rstb => h_count[1].ACLR
i_rstb => h_count[2].ACLR
i_rstb => h_count[3].ACLR
i_rstb => h_count[4].ACLR
i_rstb => h_count[5].ACLR
i_rstb => h_count[6].ACLR
i_rstb => h_count[7].ACLR
i_rstb => h_count[8].ACLR
i_rstb => h_count[9].ACLR
i_rstb => v_count[0].ACLR
i_rstb => v_count[1].ACLR
i_rstb => v_count[2].ACLR
i_rstb => v_count[3].ACLR
i_rstb => v_count[4].ACLR
i_rstb => v_count[5].ACLR
i_rstb => v_count[6].ACLR
i_rstb => v_count[7].ACLR
i_rstb => v_count[8].ACLR
i_rstb => v_count[9].ACLR
o_h_sync <= process_0.DB_MAX_OUTPUT_PORT_TYPE
o_v_sync <= process_0.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[0] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[1] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[2] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[3] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[4] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[5] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[6] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[7] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[8] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_x[9] <= o_pixel_x.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[0] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[1] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[2] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[3] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[4] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[5] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[6] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[7] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[8] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_pixel_y[9] <= o_pixel_y.DB_MAX_OUTPUT_PORT_TYPE
o_vid_display <= display_on.DB_MAX_OUTPUT_PORT_TYPE
i_red_in[0] => red[0].DATAIN
i_red_in[1] => red[1].DATAIN
i_red_in[2] => red[2].DATAIN
i_red_in[3] => red[3].DATAIN
i_green_in[0] => green[0].DATAIN
i_green_in[1] => green[1].DATAIN
i_green_in[2] => green[2].DATAIN
i_green_in[3] => green[3].DATAIN
i_blue_in[0] => blue[0].DATAIN
i_blue_in[1] => blue[1].DATAIN
i_blue_in[2] => blue[2].DATAIN
i_blue_in[3] => blue[3].DATAIN
o_red_out[0] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[1] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[2] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_red_out[3] <= o_red_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[0] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[1] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[2] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_green_out[3] <= o_green_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[0] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[1] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[2] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE
o_blue_out[3] <= o_blue_out.DB_MAX_OUTPUT_PORT_TYPE


|vga2|pll_25MHz:inst1
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|vga2|pll_25MHz:inst1|altpll:altpll_component
inclk[0] => pll_25MHz_altpll:auto_generated.inclk[0]
inclk[1] => pll_25MHz_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => pll_25MHz_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll_25MHz_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|vga2|pll_25MHz:inst1|altpll:altpll_component|pll_25MHz_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|vga2|quadro:inst2
coluna[0] => LessThan0.IN20
coluna[0] => LessThan1.IN20
coluna[1] => Add0.IN20
coluna[2] => Add0.IN19
coluna[3] => Add0.IN18
coluna[4] => Add0.IN17
coluna[5] => Add0.IN16
coluna[6] => Add0.IN15
coluna[7] => Add0.IN14
coluna[8] => Add0.IN13
coluna[9] => Add0.IN12
linha[0] => LessThan2.IN20
linha[0] => LessThan3.IN20
linha[1] => Add1.IN20
linha[2] => Add1.IN19
linha[3] => Add1.IN18
linha[4] => Add1.IN17
linha[5] => Add1.IN16
linha[6] => Add1.IN15
linha[7] => Add1.IN14
linha[8] => Add1.IN13
linha[9] => Add1.IN12
moveHor[0] => Add0.IN11
moveHor[1] => Add0.IN10
moveHor[2] => Add0.IN9
moveHor[3] => Add0.IN8
moveVer[0] => Add1.IN11
moveVer[1] => Add1.IN10
moveVer[2] => Add1.IN9
moveVer[3] => Add1.IN8
a <= process_0.DB_MAX_OUTPUT_PORT_TYPE


